{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","isLoggedIn","Cookies","get","handleInput","bind","handleChange","event","this","setState","target","name","value","registerForm","onSubmit","e","handleRegistration","type","placeholder","username","onChange","email","password1","password2","className","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wQAiDeA,E,kDA5Cb,WAAaC,GAAO,IAAD,8BACb,cAAMA,IACDC,MAAQ,CACXC,aAAcC,IAAQC,IAAI,kBAEhC,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBANH,E,+CAYnB,SAAYE,GACNC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,0BAGvD,SAAaL,GACPC,KAAKC,SAAL,eAAgBF,EAAMG,OAAOC,KAAOJ,EAAMG,OAAOE,U,oBAKvD,WAAS,IAAD,OAOAC,EAAgB,uBAAMC,SAAU,SAACC,GAAD,OAAO,EAAKC,mBAAmBD,EAAG,EAAKf,QAAvD,UAChB,uBAAOiB,KAAK,OAAOC,YAAY,WAAWP,KAAK,WAAWC,MAAOJ,KAAKR,MAAMmB,SAAUC,SAAUZ,KAAKJ,cACrG,uBAAOa,KAAK,QAAQC,YAAY,QAAQP,KAAK,QAAQC,MAAOJ,KAAKR,MAAMqB,MAAOD,SAAUZ,KAAKJ,cAC7F,uBAAOa,KAAK,WAAWC,YAAY,WAAWP,KAAK,YAAYC,MAAOJ,KAAKR,MAAMsB,UAAWF,SAAUZ,KAAKJ,cAC3G,uBAAOa,KAAK,WAAWC,YAAY,eAAeP,KAAK,YAAYC,MAAOJ,KAAKR,MAAMuB,UAAWH,SAAUZ,KAAKJ,cAC/G,4BAAG,wBAAQoB,UAAU,kBAAkBP,KAAK,SAAzC,2BAGP,OACF,qBAAKO,UAAU,MAAf,SACGX,Q,GAxCWY,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0e42a92.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport Cookies from 'js-cookie';\nimport './App.css';\n\nclass App extends Component {\n  constructor (props){\n        super(props);\n        this.state = {\n          isLoggedIn: !!Cookies.get('Authorization'),\n        }\n    this.handleInput = this.handleInput.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n      }\n\n\n\n\n  handleInput(event){\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n  handleChange(event){\n        this.setState({[event.target.name]: event.target.value});\n      }\n\n\n\n  render(){\n\n\n\n\n\n\n    const registerForm = (<form onSubmit={(e) => this.handleRegistration(e, this.state)}>\n          <input type=\"text\" placeholder=\"username\" name=\"username\" value={this.state.username} onChange={this.handleInput}/>\n          <input type=\"email\" placeholder=\"email\" name=\"email\" value={this.state.email} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"password\" name=\"password1\" value={this.state.password1} onChange={this.handleInput}/>\n          <input type=\"password\" placeholder=\"confirm pass\" name=\"password2\" value={this.state.password2} onChange={this.handleInput}/>\n          <p><button className=\"btn-primary btn\" type=\"submit\">Register</button></p>\n          </form>)\n\n      return (\n    <div className=\"App\">\n      {registerForm}\n    </div>\n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}